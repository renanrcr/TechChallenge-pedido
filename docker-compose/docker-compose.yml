version: '3.4'

services:
  techchallenge:
    image: ${DOCKER_REGISTRY-}techchallenge/lanchonete:dev
    container_name: lanchonete-app
    build:
      context: ../
      dockerfile: src/api/Dockerfile
    networks:
      - techchallenge-bridge
    ports:
      - "1443:443"
    expose:
      - 1443 
    environment:
        DbServer: "sqlserver"
        DbPort: "1433"
        DbUser: "SA"
        Password: "TechChallenge#Lanchonete"
        Database: "lanchonete"
    depends_on:
      - sqlserver
      - mongodb
      - rabbitmq

  sqlserver:
    image: "mcr.microsoft.com/mssql/server:2022-latest"
    container_name: sqlserver
    hostname: 'sqlserver'
    environment:
      ACCEPT_EULA: 'Y'
      SA_PASSWORD: "TechChallenge#Lanchonete"
      MSSQL_PID: Express
    volumes:
      - c:/dados/volumes/mssql/data:/var/opt/mssql/data
      - c:/dados/volumes/mssql/log:/var/opt/mssql/log
      - c:/dados/volumes/mssql/secrets:/var/opt/mssql/secrets
    networks:
      - techchallenge-bridge
    ports:
      - "11433:1433"
    expose:
      - 1433

  mongodb:
    image: mongo:latest
    container_name: mongodb
    hostname: 'mongodb'
    networks:
      - techchallenge-bridge
    ports:
      - "27017:27017"
    expose:
      - 27017

  rabbitmq: # login guest:guest
    image: rabbitmq:3-management
    container_name: rabbitmq
    hostname: "rabbitmq"
    networks:
      - techchallenge-bridge
    labels:
      NAME: "rabbitmq"
    ports:
    - "4369:4369"
    - "5671:5671"
    - "5672:5672"
    - "25672:25672"
    - "15671:15671"
    - "15672:15672"
    expose:
      - 5672

networks:
  techchallenge-bridge:
   driver: bridge